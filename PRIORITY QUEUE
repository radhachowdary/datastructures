#include <stdio.h>
#include <stdlib.h>

struct Node {
  int data;
  int priority;
  struct Node* next;
};

struct Node* front = NULL;

void enqueue(int data, int priority) {
  struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
  new_node->data = data;
  new_node->priority = priority;
  
  if(front == NULL || priority < front->priority) {
    new_node->next = front;
    front = new_node;
  }
  else {
    struct Node* temp = front;
    while(temp->next != NULL && temp->next->priority <= priority) {
      temp = temp->next;
    }
    new_node->next = temp->next;
    temp->next = new_node;
  }
}
int dequeue() {
  if(front == NULL) {
    printf("Queue is empty\n");
    return -1;
  }
  struct Node* temp = front;
  front = front->next;
  int data = temp->data;
  free(temp);
  return data;
}
int peek() {
  if(front == NULL) {
    printf("Queue is empty\n");
    return -1;  
  }
  return front->data;
}
int main() {
  enqueue(10, 2);
  enqueue(15, 1);
  enqueue(5, 3);
  printf("Dequeued: %d\n", dequeue());
  printf("Peek: %d\n", peek());
  return 0;
}
